@page "/12"
@inject HttpClient Http
@using MudBlazor
@using MudBlazor.Components.Pages
<div class="table-wrapper">

    <MudTable Items="Users" Class="mud-table" Striped="true" Hover="true" Bordered="true" Dense="true">
     
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Address</MudTh>
            <MudTh>Phone</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Address">@context.Address</MudTd>
            <MudTd DataLabel="Phone">@context.Phone</MudTd>
        </RowTemplate>
    </MudTable>

    <div class="pagination-buttons">
        <MudButton OnClick="Decrement" Color="Color.Secondary" Variant="Variant.Filled"
                   StartIcon="@Icons.Material.Filled.ArrowBack" Disabled="@(CurrentPage == 1)">
            Back
        </MudButton>

        <MudText Class="page-indicator">@CurrentPage - @TotalPages</MudText>

        <MudButton OnClick="Increment" Color="Color.Primary" Variant="Variant.Filled"
                   EndIcon="@Icons.Material.Filled.ArrowForward" Disabled="@(CurrentPage == TotalPages)">
            Next
        </MudButton>
    </div>

</div>

@code {
    public IEnumerable<Weather.User> Users { get; set; } = [];
    public Weather.UserDto? UserDto = new();

    private int CurrentPage = 1;
    private int TotalPages = 1;
    private int PageSize = 10;
    private bool IsLoading = false;

    protected override async Task OnInitializedAsync()
    {
        await ShowPage();
    }

    private async Task Increment()
    {
        if (!IsLoading && CurrentPage < TotalPages)
        {
            CurrentPage++;
            await ShowPage();
        }
    }

    private async Task Decrement()
    {
        if (!IsLoading && CurrentPage > 1)
        {
            CurrentPage--;
            await ShowPage();
        }
    }

    public async Task ShowPage()
    {
        IsLoading = true;

        try
        {
            string url = $"http://localhost:5191/User/UserPagination?Page=1&PageSize=11";

            UserDto = await Http.GetFromJsonAsync<Weather.UserDto>(url);

            if (UserDto?.Users != null)
            {
                Users = UserDto.Users.ToList();

                int totalCount = UserDto.TotalCount;
                TotalPages = totalCount > 0
                    ? (int)Math.Ceiling((double)totalCount / PageSize)
                    : 1;

                if (CurrentPage > TotalPages)
                {
                    CurrentPage = TotalPages;
                }
            }
            else
            {
                Users = [];
                TotalPages = 1;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            Users = [];
            TotalPages = 1;
        }
        finally
        {
            IsLoading = false;
        }
    }

}
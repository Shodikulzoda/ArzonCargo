@page "/counter"
@using ReferenceClass.Models
@rendermode InteractiveServer
@inject HttpClient Http

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Name</th>
        <th>Address</th>
        <th>Phone</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var value in Users)
    {
        <tr>
            <td>@value.Id</td>
            <td>@value.Name</td>
            <td>@value.Address</td>
            <td>@value.Phone</td>
        </tr>
    }
    </tbody>
</table>

<p role="status">Current count: @currentCount</p>
<p role="status">Current count: @CurPage</p>

<button class="btn btn-primary" @onclick="IncrementCount1">back</button>
<button class="btn btn-primary" @onclick="IncrementCount">next</button>


@code {
    public IEnumerable<User> Users { get; set; } = [];
    public UserDto? UserDto = new();

    private int TotalPages = 1;
    private int CurPage = 0;

    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
        CurPage++;
        ShowPage();
    }

    private void IncrementCount1()
    {
        currentCount--;
        CurPage--;
        ShowPage();
    }

    public async Task ShowPage()
    {
        UserDto = await Http.GetFromJsonAsync<UserDto>
            ($"http://localhost:5191/User/UserPagination?Page={CurPage}&PageSize=10");
        Users = UserDto.Users;

        if (UserDto != null)
        {
            Users = UserDto.Users.ToList();
            TotalPages = UserDto.TotalCount;
        }
    }

}
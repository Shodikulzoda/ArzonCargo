@using Stocky.Shared.Models
@using Stocky.Shared.Models.Enums
@inject HttpClient Http
@inject IConfiguration Configuration

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public Product Product { get; set; } 
    private string ApiBaseUrl => Configuration["ApiBaseUrl"];

    private async Task Submit()
    {
        var response = await Http.PutAsJsonAsync($"{ApiBaseUrl}/Product/UpdateProduct", Product);
        if (response.IsSuccessStatusCode)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Console.WriteLine("Update failed: " + response.ReasonPhrase);
        }
    }

    private void Cancel() => MudDialog.Cancel();
}

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">Редактировать продукт</MudText>

        <MudTextField Label="ID продукта"
                      Variant="Variant.Outlined"
                      @bind-Value="Product.Id"
                      Margin="Margin.Dense"
                      ReadOnly="false" />

        <MudSelect T="Status"
                   Label="Статус"
                   @bind-Value="Product.Status"
                   Variant="Variant.Outlined"
                   Margin="Margin.Dense">
            @foreach (var status in Enum.GetValues<Status>())
            {
                <MudSelectItem Value="status">@status</MudSelectItem>
            }
        </MudSelect>
    </DialogContent>

    <DialogActions>
        <MudButton Color="Color.Secondary" OnClick="Cancel">Отмена</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Variant="Variant.Filled">Сохранить</MudButton>
    </DialogActions>
</MudDialog>
@using System.Net.Http.Headers
@inject HttpClient Http
@inject AuthService AuthService
@using MudBlazor.Components.Service

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">@ContentText</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="@Color" OnClick="DeletePocket" Variant="Variant.Filled">@ButtonText</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public int PocketId { get; set; }
    [Parameter] public string ContentText { get; set; } = "Are you sure you want to delete this pocket?";
    [Parameter] public string ButtonText { get; set; } = "Delete";
    [Parameter] public Color Color { get; set; } = Color.Error;

    private bool _isLoading;

    private void Cancel() => MudDialog.Cancel();

    private async Task DeletePocket()
    {
        _isLoading = true;
        try
        {
            var url = $"http://localhost:5191/CreatingPocket/DeletePocketDialog?Id={PocketId}";
            var request = new HttpRequestMessage(HttpMethod.Delete, url);
            request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", AuthService.Token);

            var response = await Http.SendAsync(request);
            if (response.IsSuccessStatusCode)
            {
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                Console.WriteLine("Error deleting pocket: " + response.ReasonPhrase);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error deleting pocket: " + ex.Message);
        }

        _isLoading = false;
    }
}
@page "/create-pocket"
@using System.Net.Http.Headers
@using MudBlazor.Components.Service
@using Stocky.Shared.Models
@inject HttpClient Http
@inject AuthService AuthService

<MudPaper Class="pa-6" Style="max-width:600px">
    <MudText Typo="Typo.h5">Create New CreatingPocket</MudText>

    <MudTextField @bind-Value="PocketModel.TotalAmount" Label="Total Amount"/>
    <MudTextField @bind-Value="PocketModel.TotalWeight" Label="Total Weight"/>
    <MudTextField @bind-Value="PocketModel.UserId" Label="UserId"/>

    <MudButton Color="Color.Primary" OnClick="CreatePocket">
        Create CreatingPocket
    </MudButton>

    @if (PocketCreated)
    {
        <MudDivider Class="my-4"/>
        <MudText Typo="Typo.h6">CreatingPocket Barcode: @PocketModel.BarCode</MudText>

        <MudTextField @bind-Value="ProductBarCode" Label="Scan Product Barcode" Immediate="true"/>
        <MudButton OnClick="AddProductToPocket">Add Product</MudButton>

        <MudTable Items="PocketItems">
            <HeaderContent>
                <MudTh>Barcode</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.ProductBarCode</MudTd>
            </RowTemplate>
        </MudTable>

        <MudButton Color="Color.Success" OnClick="FinishPocket">
            Finish Sale
        </MudButton>
    }
    <MudText Color="Color.Success" Class="mt-2">@_message</MudText>
</MudPaper>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;
    private Stocky.Shared.Models.Pocket PocketModel = new();
    private bool PocketCreated;
    private string? _message = "";

    private string? ProductBarCode;
    private List<PocketItem> PocketItems = new();

    private async Task CreatePocket()
    {
        var request = new HttpRequestMessage(HttpMethod.Post, "http://localhost:5191/CreatingPocket/CreatePocket");

        request.Content = JsonContent.Create(PocketModel);
        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", AuthService.Token);

        var response = await Http.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            PocketModel = await response.Content.ReadFromJsonAsync<Stocky.Shared.Models.Pocket>();
            PocketCreated = true;
        }
    }

    private async Task AddProductToPocket()
    {
        if (string.IsNullOrWhiteSpace(ProductBarCode)) return;

        var pocketItem = new PocketItem
        {
            PocketId = PocketModel.Id,
            ProductBarCode = ProductBarCode,
        };

        var request = new HttpRequestMessage(HttpMethod.Post, "http://localhost:5191/PocketItem/Add");
        request.Content = JsonContent.Create(pocketItem);
        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", AuthService.Token);

        var response = await Http.SendAsync(request);
        
        if (response.IsSuccessStatusCode)
        {
            PocketItems.Add(pocketItem);
            ProductBarCode = "";
        }
    }

    private async Task FinishPocket()
    {
        var request = new HttpRequestMessage(HttpMethod.Put, "http://localhost:5191/CreatingPocket/UpdatePocket");

        request.Content = JsonContent.Create(PocketModel);
        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", AuthService.Token);

        var response = await Http.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            _message = "created successfully";
            // should add qrcode;
        }
    }

}

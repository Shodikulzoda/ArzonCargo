@using MudBlazor.Components.Service
@inject AuthService AuthService
@inject NavigationManager Navigation

<MudNavMenu>
    @if (AuthService.IsAdmin)
    {
        <MudNavLink Href="home" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ShoppingCart">
            Заказы клиентов
        </MudNavLink>

        <MudNavLink Href="pockets" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Schedule">
            Незавершённые заказы
        </MudNavLink>

        <MudNavLink Href="adding-product" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.PlaylistAdd">
            Добавление продукта
        </MudNavLink>

        <MudNavLink Href="products" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Inventory">
            Все продукты
        </MudNavLink>
    }
    else if (AuthService.IsAdder)
    {
        <MudNavLink Href="adding-product" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.PlaylistAdd">
            Добавление продукта
        </MudNavLink>
    }

    <MudNavLink OnClick="Logout" Icon="@Icons.Material.Filled.ExitToApp" Color="Color.Error">
        Выйти
    </MudNavLink>
</MudNavMenu>

@code {
    protected override async Task OnInitializedAsync()
    {
        AuthService.OnChange += StateHasChanged;
        await AuthService.LoadTokenAsync();
    }

    public void Dispose()
    {
        AuthService.OnChange -= StateHasChanged;
    }

    private async Task Logout()
    {
        await AuthService.ClearTokenAsync();
        Navigation.NavigateTo("/", true);
    }
}